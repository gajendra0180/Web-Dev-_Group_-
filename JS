Typeof
Null -> object
Undefined -> undefined

substr -> (start,length)
substring -> (start,end)
slice -> (start,end)


In javascript:
All string methods return a new string. They don't modify the original string.

Formally said:

Strings are immutable: Strings cannot be changed, only replaced.



#Property Access
ECMAScript 5 (2009) allows property access [ ] on strings:
Property access might be a little unpredictable:

It makes strings look like arrays (but they are not)
If no character is found, [ ] returns undefined, while charAt() returns an empty string.
It is read only. str[0] = "A" gives no error (but does not work!)



# The two methods, indexOf() and search(), are equal?

They accept the same arguments (parameters), and return the same value?

The two methods are NOT equal. These are the differences:

The search() method cannot take a second start position argument.
The indexOf() method cannot take powerful search values (regular expressions).




#In JS
String+number or number+string or string+string always yields concatenation
String(any other operator)number or number(any other operator)string or string(any other operator)string always yields mathematical evaluation

Note :
let x = 10;
let y = 20;
let z = "The result is: " + x + y;

output will be The result is: 1020   because (string+number+number) is taking place 
